# This specifies the version of Docker Compose file format. '3.8' is a recent version with good feature support.
version: '3.8'

# Define services
services:
  # PostgreSQL database service
  postgres:
    # This specifies the Docker image to use for this service. It will pull PostgreSQL version 14.5 from Docker Hub.
    image: postgres:14.5
    # This sets a specific name for the container. Without this, Docker would generate a random name.
    container_name: postgres
    # These are environment variables passed to the container. ${VARIABLE} syntax means
    # it will use values from your host's environment.
    environment:
      - TZ=Europe/Amsterdam  # Set timezone
      - POSTGRES_USER=${POSTGRES_USER}  # Set from environment variable
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  # Set from environment variable
    # This maps ports from the container to your host. Here, it's mapping the container's port 5432 to the host's port 5432.
    ports:
      - "5432:5432"
    # Volumes allow data to persist and be shared between the host and the container.
    volumes:
      # creates a named volume for the database data.
      - postgres_data:/var/lib/postgresql/data
      # mounts a local './sql' directory to run initialization scripts.
      - ./sql:/docker-entrypoint-initdb.d
    # This defines a health check to ensure the database is running and ready.
    # It runs the 'pg_isready' command every 10 seconds, with a 5-second timeout, retrying 5 times.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # This connects the service to a custom network named 'my_network'.
    networks:
      - spark_udemy_network
# This creates a custom network named 'my_network' using the bridge driver.
# Bridge is the default network driver, providing isolation between containers.
networks:
  spark_udemy_network:
    driver: bridge
# This creates a named volume 'postgres_data' that can be used by services.
# Named volumes persist data even when containers are removed.
volumes:
  postgres_data: